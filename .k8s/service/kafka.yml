apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 9092
      name: kafka
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-statefulset
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka
    spec:
      hostname: kafka
      restartPolicy: Always
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://$(MY_POD_NAME).kafka.default.svc.cluster.local:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-cs:2181
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
  volumeClaimTemplates:
    - metadata:
        name: kafkadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "kafka"
        resources:
          requests:
            storage: 5Gi