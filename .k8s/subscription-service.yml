apiVersion: v1
kind: Service
metadata:
  name: subscription-service
  namespace: climacast
spec:
  selector:
    app: subscription-service
  ports:
    - port: 80
      targetPort: 8090
---
apiVersion: v1
kind: Service
metadata:
  name: selenium-chrome
  namespace: climacast
spec:
  selector:
    app: selenium-chrome
  ports:
    - port: 4444
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-service
  namespace: climacast
spec:
  selector:
    matchLabels:
      app: subscription-service
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: subscription-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
    spec:
      containers:
        - name: subscription-service
          image: ghcr.io/yunhozz/climacast-subscription-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8090
          env:
            - name: APPLICATION_PROFILE
              value: prod
            - name: TZ
              value: Asia/Seoul
          volumeMounts:
            - name: weather-image-volume
              mountPath: /mnt/weather
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: weather-image-volume
          persistentVolumeClaim:
            claimName: weather-image-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: selenium-chrome
  namespace: climacast
spec:
  selector:
    matchLabels:
      app: selenium-chrome
  replicas: 1
  template:
    metadata:
      labels:
        app: selenium-chrome
    spec:
      containers:
        - name: selenium-chrome
          image: seleniarm/standalone-chromium:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 4444
          env:
            - name: SE_NODE_MAX_SESSIONS
              value: "3"
          volumeMounts:
            - name: weather-image-volume
              mountPath: /mnt/weather
      volumes:
        - name: weather-image-volume
          persistentVolumeClaim:
            claimName: weather-image-pvc
            readOnly: true
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: weather-image-storage
  namespace: climacast
  labels:
    app: weather
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Delete
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weather-image-pv
  labels:
    app: weather
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: weather-image-storage
  hostPath:
    path: /mnt/weather
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: weather-image-pvc
  namespace: climacast
  labels:
    app: weather
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: weather-image-storage
  resources:
    requests:
      storage: 1Gi