apiVersion: v1
kind: Service
metadata:
  name: mysql-weather-replica
  namespace: database
  labels:
    app: mysql-weather-replica
spec:
  selector:
    app: mysql-weather-replica
  clusterIP: None
  ports:
    - port: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-subscription-replica
  namespace: database
  labels:
    app: mysql-subscription-replica
spec:
  selector:
    app: mysql-subscription-replica
  clusterIP: None
  ports:
    - port: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-weather-replica
  namespace: database
  labels:
    app: mysql-weather-replica
spec:
  serviceName: mysql-weather-replica
  replicas: 2
  selector:
    matchLabels:
      app: mysql-weather-replica
  template:
    metadata:
      labels:
        app: mysql-weather-replica
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mysql-weather-source
                      - mysql-weather-replica
      containers:
        - name: mysql-weather-replica
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: TZ
              value: Asia/Seoul
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
              readOnly: true
            - name: mysql-weather-replica-volume
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-weather-replica-configmap
  volumeClaimTemplates:
    - metadata:
        name: mysql-weather-replica-volume
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-subscription-replica
  namespace: database
  labels:
    app: mysql-subscription-replica
spec:
  serviceName: mysql-subscription-replica
  replicas: 2
  selector:
    matchLabels:
      app: mysql-subscription-replica
  template:
    metadata:
      labels:
        app: mysql-subscription-replica
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mysql-subscription-source
                      - mysql-subscription-replica
      containers:
        - name: mysql-subscription-replica
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: TZ
              value: Asia/Seoul
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
              readOnly: true
            - name: mysql-subscription-replica-volume
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-subscription-replica-configmap
  volumeClaimTemplates:
    - metadata:
        name: mysql-subscription-replica-volume
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-replication-job
  namespace: database
spec:
  template:
    spec:
      containers:
        - name: setup-mysql-weather-replica-0
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: mysql-secret
          command:
            - sh
            - -c
          args:
            - mysql -h mysql-weather-replica-0.mysql-weather-replica.database.svc.cluster.local -u root -p$MYSQL_ROOT_PASSWORD < /sql/mysql-weather-replica.sql
          volumeMounts:
            - name: mysql-replication-volume
              mountPath: /sql
        - name: setup-mysql-weather-replica-1
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: mysql-secret
          command:
            - sh
            - -c
          args:
            - mysql -h mysql-weather-replica-1.mysql-weather-replica.database.svc.cluster.local -u root -p$MYSQL_ROOT_PASSWORD < /sql/mysql-weather-replica.sql
          volumeMounts:
            - name: mysql-replication-volume
              mountPath: /sql
        - name: setup-mysql-subscription-replica-0
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: mysql-secret
          command:
            - sh
            - -c
          args:
            - mysql -h mysql-subscription-replica-0.mysql-subscription-replica.database.svc.cluster.local -u root -p$MYSQL_ROOT_PASSWORD < /sql/mysql-subscription-replica.sql
          volumeMounts:
            - name: mysql-replication-volume
              mountPath: /sql
        - name: setup-mysql-subscription-replica-1
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: mysql-secret
          command:
            - sh
            - -c
          args:
            - mysql -h mysql-subscription-replica-1.mysql-subscription-replica.database.svc.cluster.local -u root -p$MYSQL_ROOT_PASSWORD < /sql/mysql-subscription-replica.sql
          volumeMounts:
            - name: mysql-replication-volume
              mountPath: /sql
      volumes:
        - name: mysql-replication-volume
          configMap:
            name: mysql-replication-configmap
      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-weather-replica-configmap
  namespace: database
data:
  my.cnf: |
    [mysqld]
    server-id=102
    log-bin=mysql-bin
    binlog-format=ROW
    gtid_mode=ON
    enforce-gtid-consistency=ON
    relay-log=mysql-relay-bin
    skip-name-resolve
    character-set-server=utf8mb4
    collation-server=utf8mb4_general_ci
    bind-address=0.0.0.0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-subscription-replica-configmap
  namespace: database
data:
  my.cnf: |
    [mysqld]
    server-id=202
    log-bin=mysql-bin
    binlog-format=ROW
    gtid_mode=ON
    enforce-gtid-consistency=ON
    relay-log=mysql-relay-bin
    skip-name-resolve
    character-set-server=utf8mb4
    collation-server=utf8mb4_general_ci
    bind-address=0.0.0.0