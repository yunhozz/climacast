name: Feature to Develop PR Test

on:
  pull_request:
    branches:
      - "develop"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Load Properties from secret and process
        run: |
          mkdir -p ./global/src/main/resources
          touch ./global/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION }}" > ./global/src/main/resources/application.properties
          cat ./global/src/main/resources/application.properties

      - name: Load Environments from secret and process
        run: |
          touch ./.env
          echo "${{ secrets.ENV }}" > ./.env
          cat ./.env

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker compose -f docker-compose-dev.yml --env-file .env up -d
          docker compose -f docker-compose-dev.yml ps
          sleep 30

      - name: Test with Gradle
        run: ./gradlew --info test -x :config-server:test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: '**/build/test-results/test/*.xml'

      - name: Upload Test Results as Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results

      - name: Cleanup Gradle Cache
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
