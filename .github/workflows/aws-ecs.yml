name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: climacast
  ECS_SERVICE: climacast-service
  ECS_CLUSTER: climacast-cluster
  ECS_TASK_DEFINITION: climacast-task-revision.json
  CONTAINER_NAME: climacast-container
  GIT_COMMIT_HASH: ${{ github.sha }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load Properties and Environments from Secrets and Process
        run: |
          mkdir -p ./global/src/main/resources
          touch ./global/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./global/src/main/resources/application.properties
          touch ./config-server/src/main/resources/application-key.yml
          echo "${{ secrets.APPLICATION_KEY_YML }}" | base64 -d > ./config-server/src/main/resources/application-key.yml
          echo "${{ secrets.ENV }}" > .env

      - name: Build and push Docker images to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> .env
          echo "GIT_COMMIT_HASH=${{ env.GIT_COMMIT_HASH }}" >> .env
          SERVICES=("config-server" "eureka-server" "api-gateway" "batch-server" "subscription-service")

          for SERVICE in ${SERVICES[@]}; do
            echo "Building image for $SERVICE"
            docker compose build $SERVICE
            docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$SERVICE
          done
          
          docker image ls

      - name: Deploy each Service on ECS
        run : |
          SERVICES=("config-server" "eureka-server" "api-gateway" "batch-server" "subscription-service")
          
          for SERVICE in ${SERVICES[@]}; do
            echo "Deploying $SERVICE to ECS"
            aws ecs update-service \
              --cluster ${{ env.ECS_CLUSTER }} \
              --service $SERVICE \
              --task-definition climacast-task:2
          done