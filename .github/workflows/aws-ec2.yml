name: Deploy to EC2

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GIT_COMMIT_HASH: ${{ github.sha }}
        run: |
          SERVICES=$(docker compose config --services)

          for SERVICE in $SERVICES; do
            IMAGE_TAG="${SERVICE}-${GIT_COMMIT_HASH}"
            echo "Building image for $SERVICE with tag $IMAGE_TAG"

            docker compose build $SERVICE
            docker tag $SERVICE:latest $ECR_REGISTRY/climacast:$IMAGE_TAG
            docker push $ECR_REGISTRY/climacast:$IMAGE_TAG

            echo "${SERVICE}-image=${ECR_REGISTRY}/climacast:$IMAGE_TAG" >> $GITHUB_ENV
          done

      - name: Setup SSH key for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i ~/.ssh/id_rsa docker-compose.yml ubuntu@ec2-3-39-252-185.ap-northeast-2.compute.amazonaws.com:/home/ubuntu/

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@ec2-3-39-252-185.ap-northeast-2.compute.amazonaws.com << 'EOF'
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

          for SERVICE in $(docker compose -f /home/ubuntu/docker-compose.yml config --services); do
            IMAGE_TAG="${SERVICE}-${GIT_COMMIT_HASH}"
            docker pull ${ECR_REGISTRY}/climacast:$IMAGE_TAG
          done

          cd /home/ubuntu
          docker compose -f /home/ubuntu/docker-compose.yml up -d
          EOF