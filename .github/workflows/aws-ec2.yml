name: Deploy to EC2

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load Properties and Environments from Secrets and Process
        run: |
          mkdir -p ./global/src/main/resources

          touch ./global/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./global/src/main/resources/application.properties

          touch ./config-server/src/main/resources/application-key.yml
          echo "${{ secrets.APPLICATION_KEY_YML }}" | base64 -d > ./config-server/src/main/resources/application-key.yml

          echo "${{ secrets.ENV }}" > .env

      - name: Build and push Docker images to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GIT_COMMIT_HASH: ${{ github.sha }}
        run: |
          echo "ECR_REGISTRY=${ECR_REGISTRY}" >> $GITHUB_ENV
          echo "GIT_COMMIT_HASH=${GIT_COMMIT_HASH}" >> $GITHUB_ENV
          
          echo "ECR_REGISTRY=${ECR_REGISTRY}" >> .env
          echo "GIT_COMMIT_HASH=${GIT_COMMIT_HASH}" >> .env
          
          SERVICES=("config-server" "eureka-server" "api-gateway" "batch-server" "subscription-service")

          for SERVICE in ${SERVICES[@]}; do
            echo "Building image for $SERVICE with tag $IMAGE_TAG"
          
            docker compose build $SERVICE
            docker image ls
            docker push $ECR_REGISTRY/climacast:${SERVICE}-${GIT_COMMIT_HASH}

            echo "${SERVICE}-image=${ECR_REGISTRY}/climacast:$IMAGE_TAG" >> $GITHUB_ENV
          done

      - name: Copy Files via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_REMOTE_IP }}
          username: ${{ secrets.AWS_REMOTE_USER }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: ${{ secrets.AWS_REMOTE_SSH_PORT }}
          source: ".env"
          target: /home/ubuntu/
          
      - name: Deploy with EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_REMOTE_IP }}
          username: ${{ secrets.AWS_REMOTE_USER }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: ${{ secrets.AWS_REMOTE_SSH_PORT }}
          script: |
            cd /home/ubuntu/
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
            
            SERVICES=("config-server" "eureka-server" "api-gateway" "batch-server" "subscription-service")
            
            for SERVICE in ${SERVICES[@]}; do
              docker pull ${ECR_REGISTRY}/climacast:${SERVICE}-${GIT_COMMIT_HASH}
            done