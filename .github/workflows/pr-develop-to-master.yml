name: Develop to Master PR Test

on:
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Load Environments from secret and process
        run: |
          echo "${{ secrets.ENV }}" > .env
          cat .env

      - name: Set up Docker Compose
        run: |
          docker compose -f docker-compose-dev.yml --env-file .env up -d
          docker compose -f docker-compose-dev.yml ps

      - name: Wait for services to be ready
        run: |
          for i in {1..12}; do
            if docker compose -f docker-compose-dev.yml ps | grep "healthy"; then
              echo "All services are healthy!"
              break
            fi
            echo "Waiting for services to be ready..."
            sleep 5
          done
          docker compose -f docker-compose-dev.yml ps

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: '**/build/test-results/test/*.xml'

      - name: Upload Test Results as Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results

      - name: Cleanup Gradle Cache
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
