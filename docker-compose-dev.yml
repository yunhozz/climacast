services:
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    image: climacast/config-server:latest
    container_name: config-server
    ports:
      - 8888:8888
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8888/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    networks:
      - climacast-network

  batch-server:
    build:
      context: .
      dockerfile: batch-server/Dockerfile
    image: climacast/batch-server:latest
    ports:
      - 8999:8999
    environment:
      APPLICATION_PROFILE: dev
      TZ: Asia/Seoul
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8999/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: on-failure
    networks:
      - climacast-network

  subscription-service:
    build:
      context: .
      dockerfile: subscription-service/Dockerfile
    image: climacast/subscription-service:latest
    ports:
      - 8090:8090
    environment:
      APPLICATION_PROFILE: dev
      TZ: Asia/Seoul
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8090/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: on-failure
    networks:
      - climacast-network

  ai-service:
    build:
      dockerfile: ai-service/Dockerfile
      context: .
    image: climacast/ai-service:latest
    ports:
      - 8070:8070
    environment:
      APPLICATION_PROFILE: dev
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8070/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: on-failure
    networks:
      - climacast-network

  kafka-1:
    image: wurstmeister/kafka:latest
    container_name: kafka-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://kafka-1:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://kafka-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - 9092:9092
      - 19092:19092
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - climacast-network

  kafka-2:
    image: wurstmeister/kafka:latest
    container_name: kafka-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://kafka-2:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://kafka-2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - 9093:9093
      - 19093:19093
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - climacast-network

  kafka-3:
    image: wurstmeister/kafka:latest
    container_name: kafka-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183
      KAFKA_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://kafka-3:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://kafka-3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - 9094:9094
      - 19094:19094
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - climacast-network

  zookeeper-1:
    image: zookeeper:latest
    container_name: zookeeper-1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - climacast-network

  zookeeper-2:
    image: zookeeper:latest
    container_name: zookeeper-2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - climacast-network

  zookeeper-3:
    image: zookeeper:latest
    container_name: zookeeper-3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-1:2888:3888;2181 server.2=zookeeper-2:2888:3888;2181 server.3=zookeeper-3:2888:3888;2181
    networks:
      - climacast-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 10000:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9093,kafka-3:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    restart: always
    networks:
      - climacast-network

  mysql-source:
    image: mysql:latest
    container_name: mysql-source
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - 3307:3306
    volumes:
      - ./mysql/my-source.cnf:/etc/mysql/my.cnf
    networks:
      - climacast-network

  mysql-replica:
    image: mysql:latest
    container_name: mysql-replica
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - 3308:3306
    volumes:
      - ./mysql/my-replica.cnf:/etc/mysql/my.cnf
    depends_on:
      - mysql-source
    networks:
      - climacast-network

  mysql-batch:
    image: mysql:latest
    container_name: mysql-batch
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - 3309:3306
    networks:
      - climacast-network

  elasticsearch:
    image: elasticsearch:8.17.3
    container_name: elasticsearch
    ports:
      - 19200:9200
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.enrollment.enabled: false
    deploy:
      resources:
        limits:
          memory: 4g
    networks:
      - climacast-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 16379:6379
    restart: always
    networks:
      - climacast-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 19090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - climacast-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 13000:3000
    networks:
      - climacast-network

networks:
  climacast-network: